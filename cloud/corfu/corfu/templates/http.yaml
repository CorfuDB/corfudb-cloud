{{- if .Values.global.httpproxy.enabled -}}
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: policy-data
  labels: {{- include "global-manager.labels" . | nindent 4 }}
  {{- if .Values.global.vdp.enabled }}
  annotations:
    kubernetes.io/ingress.class: "vdp-contour-ext"
  {{- end }}
spec:
  virtualhost:
    fqdn: {{ .Values.global.datafqdn }}
    tls:
      secretName: ingress-certificate-data-tls
      clientValidation:
        skipClientCertValidation: true
    {{- if .Values.global.auth.enabled }}
    {{ tpl (toYaml .Values.global.authProviders) . | nindent 4 }}
    {{- end }}
  routes:
    - conditions:
        - header:
            name: x-nsx-service
            exact: site-manager-service
      services:
        - name: site-manager-service
          port: 50001
          {{- if .Values.global.auth.enabled }}
          requestHeadersPolicy:
            set:
              - name: X-NSX-Proxy
                value: "true"
          {{- end }}
          protocol: h2
          validation:
            caSecret: {{ .Values.global.upstreamvalidation.caSecret }}
            subjectName: site-manager-service
  {{- if index .Values "lm-siteproxy" "enabled" }}
- conditions:
    - header:
        name: x-nsx-service
        exact: ccp-site-proxy-service
  timeoutPolicy:
    idle: infinity
    response: infinity
  loadBalancerPolicy:
    strategy: RequestHash
    requestHashPolicies:
      - headerHashOptions:
          headerName: X-Site-Proxy-Routing-Token
        terminal: true
  services:
    - name: lm-siteproxy-service
      port: {{ index .Values "lm-siteproxy" "listeners" "port-grpc" }}
      protocol: h2
      validation:
        caSecret: {{ .Values.global.upstreamvalidation.caSecret }}
        subjectName: lm-siteproxy-service
  {{- end }}
- conditions:
    - header:
        name: x-nsx-service
        exact: idfw-service
  services:
    - name: idfw-service
      port: 50005
      {{- if .Values.global.auth.enabled }}
      requestHeadersPolicy:
        set:
          - name: X-NSX-Proxy
            value: "true"
      {{- end }}
      protocol: h2
      validation:
        caSecret: {{ .Values.global.upstreamvalidation.caSecret }}
        subjectName: idfw-service
- conditions:
    - header:
        name: x-nsx-service
        exact: ar-service
  loadBalancerPolicy:
    strategy: "Cookie"
  services:
    - name: async-replicator-service
      port: 1236
      {{- if .Values.global.auth.enabled }}
      requestHeadersPolicy:
        set:
          - name: X-NSX-Proxy
            value: "true"
      {{- end }}
      protocol: h2
      validation:
        caSecret: {{ .Values.global.upstreamvalidation.caSecret }}
        subjectName: async-replicator-service
- conditions:
    - header:
        name: x-nsx-service
        exact: security-events-service
  services:
    - name: security-events-service
      port: 50000
      {{- if .Values.global.auth.enabled }}
      requestHeadersPolicy:
        set:
          - name: X-NSX-Proxy
            value: "true"
      {{- end }}
      protocol: h2
      validation:
        caSecret: {{ .Values.global.upstreamvalidation.caSecret }}
        subjectName: security-events-service
- conditions:
    - header:
        name: x-nsx-service
        exact: wormhole-service
  services:
    - name: wormhole-server
      port: 9001
      protocol: h2c
      validation:
        caSecret: cert-manager/ca-key-pair
        subjectName: wormhole-service
  {{- end }}
