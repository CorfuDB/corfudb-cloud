input {
  file {
    tags => ["corfu"]
    mode => "read"
    path => ["/var/log/corfu/corfu*.log"]
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {

  if "corfu" in [tags] {

    mutate {
      gsub => [
        # replace pipes with spaces
        "message", "\|", " ",
        # replace ansi with empties
        "message", "\x1B\[[0-?]*[ -/]*[@-~]", ""
      ]
    }

    grok {
      patterns_dir => ["/usr/share/logstash/patterns"]
      match => {"message" => "%{TIMESTAMP_ISO8601:ts}%{SPACE}%{LOGLEVEL:lvl}%{SPACE}%{THREAD:thread}%{SPACE}%{CLASS:class}%{SPACE}%{GREEDYDATA:msg}"}
    }

    date {
      locale => "en"
      match => ["ts", "ISO8601"]
      timezone => "Europe/Vienna"
      target => "@timestamp"
    }

    grok {
      match => {
        "path" => "%{GREEDYDATA}/%{GREEDYDATA:index_name}/%{IP:server}/%{GREEDYDATA:filename}\.log"
      }
    }

    mutate {
      remove_field => ["path", "host", "ts", "message"]
    }
  }
}

